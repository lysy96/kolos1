
1. Rola i zadania systemu operacyjnego:
System operacyjny (SO) to oprogramowanie zarządzające sprzętem komputerowym i zapewniające usługi dla programów użytkowników. Jego główne zadania to: zarządzanie procesami, pamięcią, urządzeniami wejścia-wyjścia, plikami, bezpieczeństwem oraz komunikacją międzyprocesową. Umożliwia także wielozadaniowość, ochronę zasobów, izolację procesów i interakcję z użytkownikiem.

2. Wywołanie systemowe/funkcja systemowa:
Wywołanie systemowe to funkcja, która umożliwia aplikacjom dostęp do usług systemu operacyjnego (np. operacje na plikach, zarządzanie procesami). Przykłady: otwarcie pliku, alokacja pamięci, zmiana uprawnień. Operacje związane z pamięcią wirtualną wymagają wywołań systemowych, ponieważ dostęp do pamięci fizycznej i zarządzanie pamięcią wirtualną odbywa się za pośrednictwem jądra. Wywołania systemowe w Linuksie można śledzić za pomocą narzędzi takich jak `strace`.

3. Proces vs. Program:
Proces to wykonywana instancja programu, który jest załadowany do pamięci, posiada swój stan i zasoby. Program jest jedynie zbiorem instrukcji, natomiast proces to jego działająca reprezentacja.

4. Stany procesu:
Procesy mogą znajdować się w następujących stanach: gotowy, uruchomiony, oczekujący (blokada), zakończony. Diagram przejścia pokazuje przejścia między tymi stanami w zależności od zdarzeń, np. zakończenie operacji I/O.

5. Blok kontrolny procesu:
Blok kontrolny zawiera informacje o stanie procesu, jego rejestrach, wskaźnikach stosu, priorytetach, czasie CPU, otwartych plikach i innych zasobach.

6. Przełączanie kontekstu:
Przełączanie kontekstu to proces zapisywania stanu jednego procesu i wczytywania stanu innego. Wymaga zapisania i załadowania rejestrów procesora oraz wskaźników stosu. Wykonywane jest przy każdym prewencyjnym przełączeniu między procesami. Zbyt częste przełączanie powodowałoby nadmierne obciążenie systemu.

7. Zadania planisty:
Planista decyduje, który proces ma być wykonany na procesorze. Tryby to: FCFS (First Come First Serve), SJF (Shortest Job First) i Round Robin. Planowanie wykonywane jest na podstawie priorytetów, czasu CPU i stanu procesów.

8. Kryteria oceny algorytmów planowania:
Czas oczekiwania, czas odpowiedzi, czas realizacji procesów, sprawiedliwość i efektywność są głównymi kryteriami.

9. Niewywłaszczające algorytmy planowania:
Algorytmy takie jak FCFS (First Come First Serve) i SJF (Shortest Job First) są niewywłaszczające. Dla trzech procesów z czasami 10 ms, 20 ms i 100 ms w FCFS procesy oczekują w kolejności przybycia, podczas gdy SJF preferuje najkrótsze procesy.

10. Wywłaszczające algorytmy planowania:
Algorytmy wywłaszczające, np. Round Robin, pozwalają na przerwanie działania procesu i przydzielenie CPU innemu procesowi. Zalety to sprawiedliwość i równomierne rozdzielanie zasobów.

11. Mechanizmy komunikacji międzyprocesowej:
Mechanizmy takie jak komunikacja za pomocą kolejek wiadomości i pamięci dzielonej umożliwiają wymianę danych między procesami. Jądro systemu operacyjnego zarządza dostępem i synchronizacją.

12. Problemy związane ze współbieżną modyfikacją licznika:
Problem może wystąpić, gdy dwa procesy próbują jednocześnie modyfikować ten sam licznik. Konieczna jest synchronizacja, np. za pomocą semafora.

13. Problem sekcji krytycznej:
Problem dotyczy dostępu do współdzielonych zasobów przez wiele procesów. Rozwiązanie wymaga synchronizacji, np. za pomocą semaforów, mutexów lub blokad.

14. Instrukcje procesora „test-and-set” oraz „compare-and-swap”:
Służą do synchronizacji procesów w sekcjach krytycznych. Test-and-set ustawia wartość na 1 i zwraca starą wartość. Compare-and-swap zmienia wartość tylko, jeśli jest zgodna z oczekiwaną.

15. Semafor:
Semafor to zmienna służąca do synchronizacji procesów, kontrolująca dostęp do zasobów. Używa operacji `wait()` i `signal()`.

16. Zakleszczenie:
Zakleszczenie to sytuacja, w której procesy wzajemnie czekają na zasoby, które są już zablokowane przez inne procesy. Warunki: wzajemne wykluczenie, nieprzerwalność, zatrzymanie i cykliczna zależność.

17. Adres fizyczny, logiczny, przestrzeń adresowa:
Adres logiczny to adres w przestrzeni adresowej procesu, a fizyczny to adres w pamięci RAM. Tłumaczenie odbywa się przez jednostkę MMU (Memory Management Unit) podczas dostępu do pamięci.

18. Mechanizm stronicowania:
Stronicowanie dzieli pamięć na strony. Ramka to blok pamięci, strona to jednostka pamięci logicznej. Tablica stron mapuje strony na ramki pamięci.

19. Pamięć wirtualna:
Pamięć wirtualna pozwala na używanie więcej pamięci, niż jest dostępne w fizycznej. Błąd strony występuje, gdy proces żąda strony, która nie jest załadowana do pamięci.

20. Algorytm NRU:
Algorytm NRU (Not Recently Used) usuwa strony, które nie były używane przez długi czas. Algorytm nie bierze pod uwagę, jak długo strona była w pamięci.

21. Algorytmy FIFO, Second Chance, LRU:
FIFO usuwa stronę, która była w pamięci najdłużej. Algorytm drugiej szansy daje stronie drugą szansę na użycie. LRU usuwa stronę, która była najdłużej nieużywana.

22. Algorytm z dodatkowymi bitami odniesienia:
Liczniki przechowują informacje o czasie ostatniego dostępu do strony. Strona, która ma najstarszy bit odniesienia, jest usuwana.

23. Szamotanie:
Szamotanie występuje, gdy system nie może przydzielić pamięci lub zasobów procesowi, co powoduje nadmierne wykorzystanie procesora i innych zasobów.

24. Atrybuty pliku:
Atrybuty pliku mogą obejmować nazwę, rozmiar, daty modyfikacji, właściciela, uprawnienia dostępu.

25. Metody dostępu do pliku:
Odczyt pliku może być realizowany sekwencyjnie lub losowo.

26. Operacje na plikach:
Tworzenie, otwieranie, czytanie, zapisywanie i zamykanie plików są realizowane przez funkcje systemowe, takie jak `open()`, `read()`, `write()`, `close()` w Linuksie.

27. Struktury katalogów:
Katalogi mogą być organizowane w sposób hierarchiczny lub w postaci tabeli.

28. Ochrona systemu plików w Linuksie:
Mechanizmy obejmują uprawnienia dostępu, kontrolę dostępu na podstawie użytkowników i grup, oraz ACL.

29. Metody alokacji w systemie plików:
Przydział ciągły (wszystkie bloki pliku są obok siebie), listowy (wszystkie bloki są wskazywane przez wskaźniki), indeksowy (wszystkie wskaźniki przechowywane w jednym bloku).

30. Reprezentacja wolnej przestrzeni:
Może być reprezentowana jako lista wolnych bloków, bitmapy lub tablica.

31. Komunikacja procesora z rejestrami I/O:
Procesor może komunikować się z rejestrami I/O za pomocą pamięci (mapped I/O) lub portów.

32. Obsługa I/O sterowana przerwaniami:
Umożliwia procesorowi wykonywanie innych zadań, gdy operacja I/O jest w toku, i przerywa jego działanie, gdy operacja jest zakończona.

33. DMA (Direct Memory Access):
DMA umożliwia bezpośrednią komunikację urządzeń z pamięcią, co poprawia wydajność operacji I/O.
